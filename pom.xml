<!--<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sap.fiori</groupId>
	<artifactId>com.sap.servicerequest.servicerequest</artifactId>
	<version>2018.1.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>servicerequest</name>
	<parent>
		<groupId>com.sap.fiori</groupId>
		<artifactId>fnf-parent-pom</artifactId>
		<version>1.19.0</version>
	</parent>
</project>-->



<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.sap.support</groupId>
		<artifactId>fnf-parent-pom</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<!-- define the groupId for your project, e.g. com.sap.support.application -->
	<groupId>com.sap.fiori</groupId>
	<!-- define the artifactId for your project, e.g. application -->
	<artifactId>com.sap.servicerequest.servicerequest</artifactId>
	<!-- define the next wave / version for your application, it must be in format YEAR.WAVE.VERSION-SNAPSHOT, e.g. 2017.3.1-SNAPSHOT -->
	<version>2019.1.1-SNAPSHOT</version>
	<!-- define a human readable name for your application, e.g. Application -->
	<name>Service Request</name>
	<!-- describe your project, a quick comment to any readers of the POM -->
	<description>As part of a customer engagement TQM may want to create a Service Order(SO). Unlike the old process where the TQM directly
		created SO, now the TQM is expected to create a Service Request and furnish all details about Customer, Project, SO line items, Resource
		needs etc., Once the Service Request is scoped and is aligned with all stakeholders(CoE/Deployment Room), the information contained as part of Service Request will
		be used to automatically create a Service Order in ICP system.</description>
	<packaging>war</packaging>
	<build>
		<plugins>
			<!--
				in case your application contains translatable .properties resource files, uncomment the
				following plugin-section and define your D/I/C user id with a upper case first letter,
				e.g. D012345 as translationDeveloper, as well as a translationCollection name starting
				with SUPPORTPORTAL_, e.g SUPPORTPORTAL_APPLICATION to identify your translation resources.
			-->
			<!--
			<plugin>
				<groupId>com.sap.ldi</groupId>
				<artifactId>translation-plugin</artifactId>
				<configuration>
					<translationDeveloper>TO BE DEFINED</translationDeveloper>
					<translationCollection>TO BE DEFINED</translationCollection>
				</configuration>
			</plugin>
			-->
			<!--
				in case you get a "merge-modules failed: module name could not be determined" error on build,
				uncomment the following plugin-section and define the SAPUI5 namespace of your Component file
				in the <prefix> tag e.g. sap/support/application. In case your Component.js file in not placed
				in the /webapp folder of your application, add the path to your folder after the /app part.
			-->
			<!--
			<plugin>
				<groupId>com.sap.ui5.tools.build</groupId>
				<artifactId>maven-coldwater-plugin</artifactId>
				<executions>
					<execution>
						<id>merge-application-modules</id>
						<configuration>
							<resourceRoots>
								<resourceRoot>
									<folder>${project.build.directory}/app</folder>
									<prefix>TO BE DEFINED</prefix>
									<autoDetectPrefix>false</autoDetectPrefix>
								</resourceRoot>
							</resourceRoots>
						</configuration>
					</execution>
				</executions>
			</plugin>
			-->
		</plugins>
	</build>
</project>